---------------------Common Command
sudo apt install curl 
sudo apt install pavucontrol  # Audio control system
zip -r ctas2.zip . -x *.git* */node_modules/**\*

---------------------VS Code
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg 
sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/ 
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list' 

sudo apt install apt-transport-https 
sudo apt update 
sudo apt install code # or code-insiders  

---------------------Node
curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash - 
#curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
sudo apt-get install -y nodejs 

---------------------NVM
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
source ~/.bashrc
nvm list
nvm install lts/fermium
nvm use v14.16.0

---------------------Angular CLI
####### sh: 1: node: Permission denied
# npm config set user 0
# npm config set unsafe-perm true
# npm config ls -l
npm install -g @angular/cli 


---------------------MongoDB 
# https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list 
wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - 
sudo apt-get install gnupg 
wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - 
sudo apt-get update 
sudo apt-get install -y mongodb-org 

sudo systemctl start mongod 
sudo systemctl daemon-reload 
sudo systemctl status mongod 
sudo systemctl enable mongod 
mongo 

(https://docs.mongodb.com/manual/tutorial/enable-authentication/) 

ps --no-headers -o comm 1 
sudo systemctl stop mongod 
sudo systemctl restart mongod 
sudo service mongod stop 
sudo apt-get purge mongodb-org* 
sudo rm -r /var/log/mongodb 
sudo rm -r /var/lib/mongodb 

(https://docs.mongodb.com/compass/current/install) 

wget https://downloads.mongodb.com/compass/mongodb-compass_1.24.6_amd64.deb 
sudo dpkg -i mongodb-compass_1.24.6_amd64.deb 
mongodb-compass 

# ubuntu server 22.0 LTS
# https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/
#echo "deb http://security.ubuntu.com/ubuntu impish-security main" | sudo tee /etc/apt/sources.list.d/impish-security.list
#sudo apt-get update
#sudo apt-get install libssl1.1

---------------------Git 
sudo apt install git 
git –version 
git config --global user.name "abc" 
git config --global user.email web@linuxconfig.org 
git config –list 

---------------------Skype 
wget https://go.skype.com/skypeforlinux-64.deb 
sudo apt install ./skypeforlinux-64.deb 

---------------------NotepadQQ 
sudo apt-get update 
sudo apt-get install notepadqq   
Notepadqq 
sudo apt-get remove --autoremove notepadqq 

---------------------Google Chrome 
wget --version 
sudo apt install wget 
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 
sudo dpkg -i google-chrome-stable_current_amd64.deb 
google-chrome 

---------------------VLC 
sudo add-apt-repository ppa:videolan/stable-daily 
sudo apt-get update 
sudo apt-get install vlc 

---------------------Virtual Box 
sudo apt update 
sudo apt install virtualbox virtualbox-ext-pack 

---------------------Google Drive 
sudo add-apt-repository ppa:nilarimogard/webupd8 
sudo apt-get update 
sudo apt-get install grive 
mkdir -p ~/grive 
cd ~/grive 
grive -a 
cd ~/grive 
grive 

---------------------Robo-3T/ Studio-3T 
download : https://robomongo.org/download 
tar -xvzf tar-file 
sudo mkdir /usr/local/bin/robo3t 
sudo mv  folder-file/* /usr/local/bin/robo3t 
cd /usr/local/bin/robo3t/bin 
sudo chmod +x robo3t ## run command only if robo3t isn't executable file 
./robo3t   ## or ./studio-3t 

---------------------Yarn
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update && sudo apt install yarn
yarn --version

---------------------Docker
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
	
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
   
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io   
apt-cache madison docker-ce

---------------------Postman 
sudo snap install postman 


---------------------Anydesk 
wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | sudo apt-key add - 
echo "deb http://deb.anydesk.com/ all main" | sudo tee /etc/apt/sources.list.d/anydesk-stable.list 
sudo apt update 
sudo apt install anydesk 
sudo apt remove anydesk

---------------------Opera
wget -qO- https://deb.opera.com/archive.key | sudo apt-key add -
sudo add-apt-repository "deb [arch=i386,amd64] https://deb.opera.com/opera-stable/ stable non-free"
sudo apt update
sudo apt install opera-stable

---------------------Microsoft Edge
curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
sudo rm microsoft.gpg
sudo apt update
sudo apt install microsoft-edge-dev

---------------------Powershell
sudo apt-get update
sudo apt-get install -y wget apt-transport-https software-properties-common
wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
sudo apt-get update
sudo add-apt-repository universe
sudo apt-get install -y powershell
pwsh

---------------------Dotnet Core
wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
sudo apt-get update
sudo apt-get install -y apt-transport-https
sudo apt-get update
sudo apt-get install -y dotnet-sdk-5.0
sudo apt-get install -y aspnetcore-runtime-5.0
sudo apt-get install -y dotnet-runtime-5.0
#SDK 6
sudo apt-get install -y dotnet-sdk-6.0
sudo apt-get install -y aspnetcore-runtime-6.0
sudo apt-get install -y dotnet-runtime-6.0

--------------------- ZOOM
wget https://zoom.us/client/latest/zoom_amd64.deb
sudo apt install ./zoom_amd64.deb
sudo apt remove zoom

--------------------- MS Team
sudo curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/ms-teams stable main" > /etc/apt/sources.list.d/teams.list'
sudo apt update
sudo apt install teams
sudo apt remove teams
sudo dpkg -r teams

---------------------XAMPP
chmod 755 xampp-linux-*-installer.run
Run the installer
sudo ./xampp-linux-*-installer.run
sudo /opt/lampp/lampp start
sudo /opt/lampp/lampp stop

---------------------FileZilla
sudo apt install filezilla

---------------------Kubernetes K8s microk8s
https://ubuntu.com/kubernetes/install
sudo snap install microk8s --classic
sudo usermod -a -G microk8s $USER
sudo chown -f -R $USER ~/.kube
su - $USER
microk8s status --wait-ready
microk8s enable dashboard dns ingress
microk8s kubectl get all --all-namespaces
microk8s dashboard-proxy #chrome://flags/ --> localhost = enabled
microk8s start
microk8s stop

---------------------Free Screen Recorder
sudo wget -q -O - https://screenrec.com/download/pub.asc | sudo apt-key add -
sudo add-apt-repository 'deb https://screenrec.com/download/ubuntu stable main'
sudo apt update
sudo apt install screenrec

--------------------- VNC
Ubuntu 21
https://blog.gordonbuchan.com/blog/index.php/2021/08/22/installing-x11vnc-to-replace-broken-screen-sharing-on-ubuntu-21-04/
https://help.ubuntu.com/community/VNC/Servers

Ubuntu 20
https://www.crazy-logic.co.uk/projects/computing/how-to-install-x11vnc-vnc-server-as-a-service-on-ubuntu-20-04-for-remote-access-or-screen-sharing
#First of all lets do a
sudo apt-get update
#First thing we need to do is change the display manager over to lightdm (away from gnome display manager 3).
sudo apt-get install lightdm
#followed by a quick reboot
sudo reboot
#and then
sudo apt-get install x11vnc
sudo nano /lib/systemd/system/x11vnc.service

#and copy paste in the following
[Unit]
Description=x11vnc service
After=display-manager.service network.target syslog.target

[Service]
Type=simple
ExecStart=/usr/bin/x11vnc -forever -display :0 -auth guess -passwd password
ExecStop=/usr/bin/killall x11vnc
Restart=on-failure

[Install]
WantedBy=multi-user.target
#and copy paste END 

#Super – now we need to tell the systemd system there is a change and to reload
sudo systemctl daemon-reload
#followed by enabling the new service
systemctl enable x11vnc.service
#While we’re there we may aswell start the service then test it
sudo systemctl start x11vnc.service

sudo systemctl status x11vnc.service

#One last test before calling it done is to reboot the system once again. It’s important to check that you can log in from the ‘login’ screen.
#OH – A GOTYA – don’t lock the screen as you wont be able to VNC back in.
#So change your settings>privacy>screen lock to the following.
---------------------

---------------------

---------------------

---------------------

---------------------



