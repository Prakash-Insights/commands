sudo nautilus  //USB HDD open with root permission

hostname -I  // IP addredd
uname -a  // Linux version details
uname -r // Linux OS version
uname -m // 32 or 64 bit OS

// RHEL/CentOS/Fedora 
cat /etc/redhat-release  // if Cent OS version
dnf update -y  // Cent OS update
dnf --version
dnf search apache2
systemctl status httpd  // RHEL/CentOS/Fedora 
sudo systemctl stop httpd
sudo systemctl start httpd
sudo systemctl restart httpd
sudo systemctl reload httpd 
sudo systemctl disable httpd
sudo systemctl enable httpd
sudo yum install httpd // sudo yum update httpd
vi /etc/httpd/conf.d/server-status.conf  
// vi etc/apache2/conf.d/http2.conf
yum install links
apachectl status
ps -eo comm,etime,user | grep httpd
ps -eo comm,etime,user | grep root | grep httpd


// alpine/busybox OS/image
apk add = apt install = apt-get install
apk add --update go=1.16.3
apk update/upgrade = apt update/upgrade
apk del = apt remove
# apk add is working in alpine/busybox docker image


// Debian 
systemctl list-unit-files  // list all services

--------------------  
Github process
git config --global credential.helper cache 
git config --global credential.https://github.com.username foo 
git clone https://github.com/foo/repository.git 

git config --global user.name "ABC"
git config --global user.email "ABC"
git config --list

ssh-keygen -t ed25519 -C "your_email@example.com"  // or
// enter three times
// ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
// find .ssh folder in /home/user-name/.ssh   // hidden folder
copy PUB file data and store it in github.com
git clone with SSH not HTTPs


----------
sudo lsof -i -P -n | grep LISTEN 
sudo netstat -tulpn | grep LISTEN 
sudo lsof -i:22 ## see a specific port such as 22 ## 
sudo nmap -sTU -O IP-address-Here 
find . -type f -mtime 90  // last modified file in entire system
find . -name "node_modules" -exec rm -rf '{}' +  // remove all node_modules from folders

---------- 
timedatectl set-local-rtc 1 --adjust-system-clock  #set time in dual boot 

----------- 
sed '/^$/d' input.txt > output.txt   # replace file without blank line 

------------ 
ip route get 1 | sed -n 's/^.*src \([0-9.]*\) .*$/\1/p'  # current IP Address 
netstat -pan | grep 80 
ifconfig | grep inet 

---------- 
sudo lshw -C network    # network name 
lspci | grep Network      # network name 

---------- 
sudo mokutil --sb-state      # secure boot status 
sudo apt install mokutil      # secure boot install 
sudo mokutil --disable-validation 
sudo mokutil --enable-validation 
sudo efibootmgr    # EFI Bootmanager status 

---------- 
tar -zcvf archive-name.tar.gz directory-name   # zip dir 
scp -r ./uploads  root@192.168.1.1:/var/www/html/angular/ohc/server/    #copy local file to VPS 

---------- 
Pm2 start app.js 
Pm2 list 
Pm2 stop app.js/app 

# next js for development
pm2 start npm --name "next" -- run dev

# next js for production
npm run build
pm2 start npm --name "next" -- start
PORT=3003 NODE_PORT=3003 pm2 start npm --name "next" -- start
pm2 restart all

nginx/apache---------------------------- 
service nginx restart 
service nginx start 
service nginx stop 
sudo service apache2 stop 
sudo service apache2 restart
----------
// Node JS stake out of memory 
export NODE_OPTIONS=--max-old-space-size=8192 

--------------------  
sudo passwd <username>

--------------------  
ng build --prod --aot 
export NODE_ENV=production 
set 
echo $NODE_ENV 
printenv 
printenv | less 
printenv | more 
 
-------------partition------ 
sudo parted -l 
sudo fdisk -l | grep NTFS 
cd / 
sudo mkdir /mnt/ntfs1 
sudo mount -t ntfs /dev/sdb5 /mnt/ntfs1 
df -hT 
  
sudo apt update 
sudo apt install fuse ntfs-3g 
sudo mkdir /mnt/ntfs2 
sudo mount /dev/sda5 -t ntfs-3g -o permissions /mnt/ntfs2 
sudo blkid 
-------------partition------ 


-------- 
1) npx create-react-app my-app --template redux // understand only // redux-toolkit  
2) npx create-react-app my-app and implement shopping cart into this 
-------- 
npm cache clean --force 
npm install npm@latest -g 
npm config set proxy localhost:3000   // EAI_AGAIN error  

-------- 
chmod 755 xampp-linux-*-installer.run
Run the installer
sudo ./xampp-linux-*-installer.run

--------
// Login with public key into AWS/VPS server
sudo chmod 400 '/home/user/Downloads/my-one-time.pem'
ssh -i '/home/user/Downloads/my-one-time.pem' ubuntu_user@11.22.333.140

--------
# Increase swap memory to file

sudo swapon –show 
sudo fallocate -l 1G /swapfile 
if fallocate is not installed or you get an error message saying fallocate failed: Operation not supported then use the following command to create the swap file: 
sudo dd if=/dev/zero of=/swapfile bs=1024 count=1048576 
sudo chmod 600 /swapfile 
sudo mkswap /swapfile 
sudo swapon /swapfile 
To make the change permanent open the /etc/fstab file: 
sudo nano /etc/fstab 
PATH: /etc/fstab 
/swapfile swap swap defaults 0 0 
sudo swapon –show 
sudo free -h 
